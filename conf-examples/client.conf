[server]
host = 10.0.0.10

[keys]
# If key_dir is specified and is a relative path,, it is interpreted as
# relative to the config file location. Otherwise, it defaults to the
# directory containing this config file.
key_dir = keys
# Filenames here are relative to key_dir unless absolute (and note the
# default value of key_dir if not specified in this file).
ca_cert = ca.crt.pem
client_cert = client.crt.pem
client_key = client.key.pem

# Each path definition gets its own section, named "path/name"

[path/main]
path = /mnt/btrfs/snapshots
# If true, it's assumed that we can simply run 'mount mount_path' to
# access the snapshots, and 'umount mount_path' afterward. Should be
# an absolute path.
automount = true
# if automount is true, mount path must be specified
mount path = /mnt/btrfs

# Personally, I only want my laptop to back up if it's:
# 1. On wall power (not battery)
# 2. Connected to the network via ethernet and not wifi
# 3. The address of the ethernet adapter is in the same subnet as the
#    server (could easily use a wired network somewhere and connect to
#    home over VPN, and shouldn't back up in this case)
# This still isn't perfect, but should be good enough for my usage.

# Network configuration, if desired. This entire section can be deleted
# if you're not interested in any of this functionality.
[network]

# Matched with fnmatch, to behave like systemd network interface
# identification. If this config key is present, backups will only
# occur if some matching interface is active (i.e. has an IP address).
required interface = en*

# If this is true, check the addresses of appropriate interfaces (those
# matched by the 'required interface' pattern if that config key is present,
# otherwise any interface). Only perform backups if at least one
# appropriate interface has an IP address in the same network as the backup
# destination.
require same subnet = true

# Delete this whole section if you'd like, also.
[power]
require ac power = true
